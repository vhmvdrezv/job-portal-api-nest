// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Job {
  id          Int         @id @default(autoincrement())
  title       String
  description String      
  salary      Int?
  status      JobStatus   @default(PENDING)
  jobLocation JobLocation?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  userId      Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model JobLocation {
  jobId       Int         @id
  city        String
  street      String?
  alley       String?

  job         Job         @relation(fields: [jobId], references: [id])  
}

model User {
  id                  Int         @id @default(autoincrement())
  firstName           String
  lastName            String
  email               String      @unique
  password            String
  isEmailVerified     Boolean     @default(false)
  status              UserStatus
  role                UserRole
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt

  emailVerifications  EmailVerification[]
  jobs                Job[]
}

model EmailVerification {
  id                  Int       @id @default(autoincrement())
  token               String    @unique
  userId              Int
  user                User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt           DateTime
  createdAt           DateTime  @default(now())

  @@index([token])
}

enum UserRole {
  SEEKER
  EMPLOYER
  ADMIN
}

enum JobStatus {
  ACTIVE
  INACTIVE
  PENDING
  DEACTIVATED
  REJECTED
}

enum UserStatus {
  ACTIVE
  INACTIVE
}